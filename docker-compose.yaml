##
## -------------------------
## | H T P C - D O C K E R |
## -------------------------
##
## Container based media tools configuration
##
## -- DO NOT EDIT THIS FILE --
##
## Configuration items for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '3'

######################
# SERVICES TO LAUNCH #
######################

services:

    traefik:
        hostname: traefik
        image: traefik:latest
        container_name: traefik
        restart: always
        domainname: alpha.${DOMAIN}
        networks:
            - default
            - traefik_proxy
        ports:
            - "80:80"
            - "443:443"
            - "8088:8080"
        environment:
            - CLOUDNS_AUTH_ID=${CLOUDNS_AUTH_ID}
            - CLOUDNS_AUTH_PASSWORD=${CLOUDNS_AUTH_PASSWORD}
        labels:
            - "traefik.enable=true"
            - "traefik.backend=traefik"
            - "traefik.frontend.rule=Host:traefik.${DOMAIN}"  
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /traefik"
            - "traefik.port=8080"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"

        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ${USERDIR}/docker/traefik:/etc/traefik
            - ${USERDIR}/docker/tf/shared:/shared
    # ----------------------------------------
    # PLEX
    # Robust Media Server
    # ----------------------------------------
    plex:
        container_name: plex
        image: plexinc/pms-docker
        restart: unless-stopped
        network_mode: 'host'
        ports:
            - '${IP_ADDRESS}:32400:32400/tcp'
            - '${IP_ADDRESS}:3005:3005/tcp'
            - '${IP_ADDRESS}:8324:8324/tcp'
            - '${IP_ADDRESS}:32469:32469/tcp'
            - '${IP_ADDRESS}:1900:1900/udp'
            - '${IP_ADDRESS}:32410:32410/udp'
            - '${IP_ADDRESS}:32412:32412/udp'
            - '${IP_ADDRESS}:32413:32413/udp'
            - '${IP_ADDRESS}:32414:32414/udp'
        environment:
            - PLEX_CLAIM=${PMSTOKEN}
            - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
            - ALLOWED_NETWORKS=${CIDR_ADDRESS}
            - PLEX_UID=${PUID}
            - PLEX_GID=${PGID}
        hostname: ${HOSTNAME}
        volumes:
            - './plex:/config'
            - './plex/transcode:/transcode'
            - '/data/video/Movies:/data/movies'
            - '/data/video/TV:/data/tv'
            - '/data/music/:/data/music'
            - '/data/photo/:/data/photo'
            - '/etc/localtime:/etc/localtime:ro'

    tautulli:
        container_name: tautulli
        restart: always
        image: linuxserver/tautulli
        volumes:
            - ${USERDIR}/docker/tautulli/config:/config
            - ${USERDIR}/docker/tautulli/logs:/logs:ro
            - ${USERDIR}/docker/shared:/shared
        #    ports:
        #      - "XXXX:8181"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        networks:
            - traefik_proxy
        labels:
            - "traefik.enable=true"
            - "traefik.backend=tautulli"
            - "traefik.frontend.rule=Host:tautulli.${DOMAIN}"
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /tautulli"
            - "traefik.port=8181"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"
    ombi:
        container_name: ombi
        restart: always
        image: linuxserver/ombi
        volumes:
            - ${USERDIR}/docker/ombi:/config
            - ${USERDIR}/docker/shared:/shared
    #    ports:
    #      - "XXXX:3579"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        networks:
            - traefik_proxy
        labels:
            - "traefik.enable=true"
            - "traefik.backend=ombi"
            - "traefik.frontend.rule=Host:ombi.${DOMAIN}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /ombi"
            - "traefik.port=3579"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"
    organizr:
        container_name: organizr
        restart: always
        image: lsiocommunity/organizr
        volumes:
            - ${USERDIR}/docker/organizr:/config
            - ${USERDIR}/docker/shared:/shared
    #    ports:
    #      - "XXXX:80"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        networks:
            - traefik_proxy
        labels:
            - "traefik.enable=true"
            - "traefik.backend=organizr"
            - "traefik.frontend.rule=Host:organizr.${DOMAIN}"  
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /organizr"
            - "traefik.port=80"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"
    # ----------------------------------------
    # SONARR
    # TV Series Management
    # ----------------------------------------
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        network_mode: 'traefik_proxy'
        ports:
            - '${IP_ADDRESS}:8989:8989'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=sonarr.${DOMAIN}
            - LETSENCRYPT_HOST=sonarr.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        volumes:
            - './sonarr:/config'
            - '/data/video/completed:/completed'
            - '/data/video/downloads:/downloads'
            - '/data/video/unprocessed:/unprocessed'
            - '/data/video/watch:/watch'
            - '/data/video/TV:/data/tv'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - "traefik.enable=true"
            - "traefik.backend=sonarr"
            - "traefik.frontend.rule=Host:sonarr.${DOMAIN}"  
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /organizr"
            - "traefik.port=8989"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"
    # ----------------------------------------
    # SONARR
    # TV Series Management
    # ----------------------------------------
    lidarr:
        image: linuxserver/lidarr
        container_name: lidarr
        restart: unless-stopped
        network_mode: 'traefik_proxy'
        ports:
            - '${IP_ADDRESS}:8686:8686'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=sonarr.${DOMAIN}
            - LETSENCRYPT_HOST=sonarr.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        volumes:
            - './lidarr:/config'
            - '/data/video/completed:/completed'
            - '/data/video/downloads:/downloads'
            - '/data/video/unprocessed:/unprocessed'
            - '/data/video/watch:/watch'
            - '/data/music:/music:rw'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - "traefik.enable=true"
            - "traefik.backend=lidarr"
            - "traefik.frontend.rule=Host:lidarr.${DOMAIN}"  
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /organizr"
            - "traefik.port=8686"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"

    # ----------------------------------------
    # RADARR
    # Movie Management
    # ----------------------------------------
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        network_mode: "traefik_proxy"
        ports:
            - '${IP_ADDRESS}:7878:7878'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=radarr.${DOMAIN}
            - LETSENCRYPT_HOST=radarr.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        volumes:
            - './radarr:/config'
            - '/data/video/completed:/completed'
            - '/data/video/downloads:/downloads'
            - '/data/video/unprocessed:/unprocessed'
            - '/data/video/Movies:/data/movies:rw'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - "traefik.enable=true"
            - "traefik.backend=radarr"
            - "traefik.frontend.rule=Host:radarr.${DOMAIN}"  
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /organizr"
            - "traefik.port=7878"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"

    pihole:
        image: pihole/pihole
        container_name: pihole
        restart: on-failure
        ports:
            - '${IP_ADDRESS}:53:53/tcp'
            - '${IP_ADDRESS}:53:53/udp'
            - '${IP_ADDRESS}:8090:80/tcp'
        environment:
            - ServerIP=${IP_ADDRESS}
            - PUID=${PUID}
            - PGID=${PGID}
            - WEBPASSWORD="admin"
            - VIRTUAL_HOST=pi.${DOMAIN}
            - DNS1="9.9.9.9"
            - DNS2="149.112.112.112"

        volumes:
            - './pihole:/etc/pihole/'
            - './pihole/dnsmasq:/etc/dnsmasq.d/'


    # ------------------------------------------
    # SABNZBD
    # 
    # ------------------------------------------
    sabnzbd:
        image: linuxserver/sabnzbd
        container_name: sabnzbd
        restart: unless-stopped
        network_mode: 'traefik_proxy'
        ports:
            - '${IP_ADDRESS}:9090:8080'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=sab.${DOMAIN}
        volumes:
            - './sabnzbd:/config'
            - '/data/video/downloads:/downloads'
            - '/data/video/TV:/data/tv:rw'
            - '/data/video/unprocessed:/unprocessed:rw'
            - '/data/video/completed:/completed:rw'
            - '/data/video/watch:/watch'
            - '/data/video/Movies:/data/movies:rw'
            - '/data/video/unprocessed:/incomplete-downloads'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - "traefik.enable=true"
            - "traefik.backend=sabnzbd"
            - "traefik.frontend.rule=Host:sab.${DOMAIN}"  
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /organizr"
            - "traefik.port=8080"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"

    hydra2:
        image: "linuxserver/hydra2"
        container_name: "hydra2"
        volumes:
            - ./hydra2:/config
            - '/data/video/downloads:/downloads'
            - '/media/bageera/basement/Torrents/Completed/docker/certs:/certs'
        ports:
            - "${IP_ADDRESS}:5076:5076"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ} 


    deluge:
        image: "linuxserver/deluge"
        container_name: "deluge"
        network_mode: 'bridge'
        volumes:
            - ./docker/deluge:/config 
            - '/data/video/downloads:/downloads:rw'
            - '/data/video/TV:/data/tv:rw'
            - '/data/video/completed:/completed:rw'
            - '/data/video/watch:/watch:rw'
            - '/etc/localtime:/etc/localtime:ro'
        ports:
            - '${IP_ADDRESS}:8112:8112'
            - '${IP_ADDRESS}:8118:8118'
            - '${IP_ADDRESS}:58846:58846'
            - '${IP_ADDRESS}:58946:58946'
        restart: unless-stopped
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ} 
            - LAN_NETWORK=${CIDR_ADDRESS}





# ----------------------------------------------------
#
# Management Section
#
#
# ----------------------------------------------------

    # ----------------------------------------
    # PORTAINER
    # Docker Container Management
    # ----------------------------------------
    portainer:
        image: portainer/portainer:latest
        container_name: portainer
        restart: unless-stopped
        network_mode: 'traefik_proxy'
        ports:
            - '${IP_ADDRESS}:9000:9000'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=portainer.${DOMAIN}
            - LETSENCRYPT_HOST=portainer.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        volumes:
            - './portainer:/data'
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/localtime:/etc/localtime:ro'
        command: --no-auth
        labels:
            - "traefik.enable=true"
            - "traefik.backend=portainer"
            - "traefik.frontend.rule=Host:portainer.${DOMAIN}"  
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /organizr"
            - "traefik.port=9000"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"

    # ----------------------------------------
    # MUXIMUX
    # Web Frontend for HTPC Management
    # ----------------------------------------
    muximux:
        image: linuxserver/muximux
        container_name: muximux
        restart: unless-stopped
        network_mode: 'traefik_proxy'
        ports:
            - '${IP_ADDRESS}:8080:80'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=manage.${DOMAIN}
            - LETSENCRYPT_HOST=manage.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        volumes:
            - './muximux:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - "traefik.enable=true"
            - "traefik.backend=minumix"
            - "traefik.frontend.rule=Host:manage.${DOMAIN}"  
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /organizr"
            - "traefik.port=80"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"
    # ----------------------------------------
    # WATCHTOWER
    # Automatic Update Service for Docker VMs
    # ----------------------------------------
    watchtower:
        image: kopfkrieg/watchtower
        container_name: tower
        restart: unless-stopped
        environment:
            - TZ=${TZ}
            - WATCHTOWER_NOTIFICATIONS=email
            - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SMTP_FROM}
            - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASS}
        network_mode: 'bridge'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/ssl/certs:/etc/ssl/certs'
        command: portainer --schedule @midnight --cleanup

    # ----------------------------------------
    # NETDATA
    # System Resource Monitoring Service
    # ----------------------------------------
    netdata:
        image: titpetric/netdata
        container_name: netdata
        restart: unless-stopped
        network_mode: 'traefik_proxy'
        ports:
            - '${IP_ADDRESS}:19999:19999'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=netdata.${DOMAIN}
            - LETSENCRYPT_HOST=netdata.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        cap_add:
            - SYS_PTRACE
        volumes:
            - '/proc:/host/proc:ro'
            - '/sys:/host/sys:ro'
            - '/etc/localtime:/etc/localtime:ro'
            - '/var/run/docker.sock:/var/run/docker.sock'
        labels:
            - "traefik.enable=true"
            - "traefik.backend=netdata"
            - "traefik.frontend.rule=Host:netdata.${DOMAIN}"  
        #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /organizr"
            - "traefik.port=19999"
            - "traefik.docker.network=traefik_proxy"
            - "traefik.frontend.headers.SSLRedirect=true"
            - "traefik.frontend.headers.STSSeconds=315360000"
            - "traefik.frontend.headers.browserXSSFilter=true"
            - "traefik.frontend.headers.contentTypeNosniff=true"
            - "traefik.frontend.headers.forceSTSHeader=true"
            - "traefik.frontend.headers.SSLHost=panther.local"
            - "traefik.frontend.headers.STSIncludeSubdomains=true"
            - "traefik.frontend.headers.STSPreload=true"
            - "traefik.frontend.headers.frameDeny=true"





networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge